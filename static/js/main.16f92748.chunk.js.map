{"version":3,"sources":["components/FormCarousel.jsx","components/proptypes.js","components/Carousel.js","App.js","index.js"],"names":["FormCarousel","PropTypes","arrayOf","string","isRequired","number","bool","state","changeState","changeStateItemWidth","changeStateInfinite","className","type","defaultValue","frameSize","min","max","onChange","event","step","itemWidth","animationDuration","Carousel","props","infinite","maxWidth","images","length","scroll","clickPrev","setState","prevState","maxScroll","clickNext","atribute","target","value","this","listStyle","width","itemStyle","transition","transform","imageStyle","onClick","style","map","image","key","src","alt","React","Component","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16f92748.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { carouselPropTypees } from './proptypes';\n\nexport const FormCarousel = (\n  {\n    state,\n    changeState,\n    changeStateItemWidth,\n    changeStateInfinite,\n  },\n) => (\n  <form className=\"form-input\">\n    <label>\n      FrameSize:\n      1\n      <input\n        type=\"range\"\n        defaultValue={state.frameSize}\n        min=\"1\"\n        max=\"7\"\n        onChange={event => (changeState(event, 'frameSize'))}\n      />\n      7\n    </label>\n    <label>\n      Step:\n      1\n      <input\n        type=\"range\"\n        defaultValue={state.step}\n        min=\"1\"\n        max=\"5\"\n        onChange={event => (changeState(event, 'step'))}\n      />\n      5\n    </label>\n    <label>\n      Item width:\n      100\n      <input\n        type=\"range\"\n        defaultValue={state.itemWidth}\n        min=\"100\"\n        max=\"200\"\n        step=\"10\"\n        onChange={event => (changeStateItemWidth(event))}\n      />\n      200\n    </label>\n    <label>\n      Animation Duration:\n      500\n      <input\n        type=\"range\"\n        defaultValue={state.animationDuration}\n        min=\"500\"\n        max=\"5000\"\n        step=\"100\"\n        onChange={event => (changeState(event, 'animationDuration'))}\n      />\n      5000\n    </label>\n    <label>\n      Infinite:\n      <input\n        type=\"checkbox\"\n        onChange={changeStateInfinite}\n      />\n    </label>\n  </form>\n);\n\nFormCarousel.propTypes = {\n  state: PropTypes.shape(\n    carouselPropTypees,\n  ).isRequired,\n  changeState: PropTypes.func.isRequired,\n  changeStateItemWidth: PropTypes.func.isRequired,\n  changeStateInfinite: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const carouselPropTypees = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemWidth: PropTypes.number,\n  step: PropTypes.number,\n  frameSize: PropTypes.number,\n  animationDuration: PropTypes.number,\n  infinite: PropTypes.bool,\n};\n","import React from 'react';\nimport { FormCarousel } from './FormCarousel';\nimport { carouselPropTypees } from './proptypes';\n\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  state = {\n    animationDuration: this.props.animationDuration,\n    itemWidth: this.props.itemWidth,\n    frameSize: this.props.frameSize,\n    step: this.props.step,\n    infinite: this.props.infinite,\n    maxWidth: this.props.itemWidth * this.props.images.length,\n    scroll: 0,\n  }\n\n  clickPrev = () => {\n    this.setState((prevState) => {\n      const maxScroll\n        = prevState.maxWidth - (prevState.itemWidth * prevState.frameSize);\n\n      if (prevState.infinite && prevState.scroll === 0) {\n        return { scroll: maxScroll };\n      }\n\n      if (prevState.scroll - prevState.itemWidth * prevState.step <= 0) {\n        return { scroll: 0 };\n      }\n\n      return { scroll: prevState.scroll\n        - prevState.itemWidth * prevState.step };\n    });\n  };\n\n  clickNext = () => {\n    this.setState((prevState) => {\n      const maxScroll\n        = prevState.maxWidth - (prevState.itemWidth * prevState.frameSize);\n\n      if (prevState.infinite && prevState.scroll === maxScroll) {\n        return { scroll: 0 };\n      }\n\n      if (prevState.scroll + prevState.itemWidth\n        * prevState.step >= maxScroll) {\n        return { scroll: maxScroll };\n      }\n\n      return { scroll: prevState.scroll\n        + prevState.itemWidth * prevState.step };\n    });\n  };\n\n  changeState = (event, atribute) => {\n    this.setState({\n      [atribute]: event.target.value,\n      scroll: 0,\n    });\n  };\n\n  changeStateItemWidth = (event) => {\n    this.setState({\n      itemWidth: event.target.value,\n      scroll: 0,\n      maxWidth: event.target.value * this.props.images.length,\n    });\n  };\n\n  changeStateInfinite = () => {\n    this.setState(prevState => ({ infinite: !prevState.infinite }));\n  };\n\n  render() {\n    const { images } = this.props;\n\n    const listStyle = {\n      width: `${this.state.frameSize * this.state.itemWidth}px`,\n    };\n\n    const itemStyle = {\n      transition: `transform ${this.state.animationDuration / 1000}s`,\n      transform: `translateX(-${this.state.scroll}px)`,\n    };\n\n    const imageStyle = {\n      width: `${this.state.itemWidth}px`,\n    };\n\n    return (\n      <>\n        <div className=\"Carousel\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.clickPrev}\n          >\n            {'<'}\n          </button>\n\n          <ul className=\"Carousel__list\" style={listStyle}>\n            {images.map(image => (\n              <li key={image} className=\"Carousel__item\" style={itemStyle}>\n                <img\n                  src={image}\n                  alt={image}\n                  className=\"Carousel__image\"\n                  style={imageStyle}\n                />\n              </li>\n            ))}\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.clickNext}\n          >\n            {'>'}\n          </button>\n        </div>\n\n        <FormCarousel\n          state={this.state}\n          changeState={this.changeState}\n          changeStateItemWidth={this.changeStateItemWidth}\n          changeStateInfinite={this.changeStateInfinite}\n        />\n      </>\n    );\n  }\n}\n\nCarousel.propTypes = carouselPropTypees;\n\nCarousel.defaultProps = {\n  itemWidth: 130,\n  step: 3,\n  frameSize: 3,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={this.state.images}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}