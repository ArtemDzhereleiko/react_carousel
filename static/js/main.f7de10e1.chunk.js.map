{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","state","animationDuration","props","itemWidth","frameSize","step","infinite","maxWidth","images","length","scroll","clickPrev","setState","prevState","maxScroll","clickNext","changeState","event","atribute","target","value","changeStateItemWidth","changeStateInfinite","this","listStyle","width","itemStyle","transition","transform","imageStyle","className","type","onClick","style","map","image","key","src","alt","defaultValue","min","max","onChange","title","React","Component","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7de10e1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  state = {\n    animationDuration: this.props.animationDuration,\n    itemWidth: this.props.itemWidth,\n    frameSize: this.props.frameSize,\n    step: this.props.step,\n    infinite: this.props.infinite,\n    maxWidth: this.props.itemWidth * this.props.images.length,\n    scroll: 0,\n  }\n\n  clickPrev = () => {\n    this.setState((prevState) => {\n      const maxScroll\n        = prevState.maxWidth - (prevState.itemWidth * prevState.frameSize);\n\n      if (prevState.infinite && prevState.scroll === 0) {\n        return { scroll: maxScroll };\n      }\n\n      if (prevState.scroll - prevState.itemWidth * prevState.step <= 0) {\n        return { scroll: 0 };\n      }\n\n      return { scroll: prevState.scroll\n        - prevState.itemWidth * prevState.step };\n    });\n  };\n\n  clickNext = () => {\n    this.setState((prevState) => {\n      const maxScroll\n        = prevState.maxWidth - (prevState.itemWidth * prevState.frameSize);\n\n      if (prevState.infinite && prevState.scroll === maxScroll) {\n        return { scroll: 0 };\n      }\n\n      if (prevState.scroll + prevState.itemWidth\n        * prevState.step >= maxScroll) {\n        return { scroll: maxScroll };\n      }\n\n      return { scroll: prevState.scroll\n        + prevState.itemWidth * prevState.step };\n    });\n  };\n\n  changeState = (event, atribute) => {\n    // console.log(atribute, event.target.value);\n    this.setState({\n      [atribute]: event.target.value,\n      scroll: 0,\n    });\n  };\n\n  changeStateItemWidth = (event, atribute) => {\n    this.setState({\n      [atribute]: event.target.value,\n      scroll: 0,\n      maxWidth: event.target.value * this.props.images.length,\n    });\n  };\n\n  changeStateInfinite = () => {\n    this.setState(prevState => ({ infinite: !prevState.infinite }));\n  };\n\n  render() {\n    const { images } = this.props;\n\n    const listStyle = {\n      width: `${this.state.frameSize * this.state.itemWidth}px`,\n    };\n\n    const itemStyle = {\n      transition: `transform ${this.state.animationDuration / 1000}s`,\n      transform: `translateX(-${this.state.scroll}px)`,\n    };\n\n    const imageStyle = {\n      width: `${this.state.itemWidth}px`,\n    };\n\n    return (\n      <>\n        <div className=\"Carousel\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.clickPrev}\n          >\n            {'<'}\n          </button>\n\n          <ul className=\"Carousel__list\" style={listStyle}>\n            {images.map(image => (\n              <li key={image} className=\"Carousel__item\" style={itemStyle}>\n                <img\n                  src={image}\n                  alt={image}\n                  className=\"Carousel__image\"\n                  style={imageStyle}\n                />\n              </li>\n            ))}\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.clickNext}\n          >\n            {'>'}\n          </button>\n        </div>\n        <form className=\"form-input\">\n          <label>\n            FrameSize:\n            <input\n              type=\"number\"\n              defaultValue={this.state.frameSize}\n              min=\"1\"\n              max=\"7\"\n              onChange={event => (this.changeState(event, 'frameSize'))}\n              title=\"min = 1, max = 7\"\n            />\n          </label>\n          <label>\n            Step:\n            <input\n              type=\"number\"\n              defaultValue={this.state.step}\n              min=\"1\"\n              max=\"5\"\n              onChange={event => (this.changeState(event, 'step'))}\n              title=\"min = 1, max = 5\"\n            />\n          </label>\n          <label>\n            Item width:\n            <input\n              type=\"number\"\n              defaultValue={this.state.itemWidth}\n              min=\"100\"\n              max=\"200\"\n              step=\"10\"\n              onChange={event => (\n                this.changeStateItemWidth(event, 'itemWidth')\n              )}\n              title=\"min = 100, max = 200\"\n            />\n          </label>\n          <label>\n            Animation Duration:\n            <input\n              type=\"number\"\n              defaultValue={this.state.animationDuration}\n              min=\"500\"\n              max=\"5000\"\n              step=\"100\"\n              onChange={event => (this.changeState(event, 'animationDuration'))}\n              title=\"min = 500, max = 5000\"\n            />\n          </label>\n          <label>\n            Infinite:\n            <input\n              type=\"checkbox\"\n              onChange={this.changeStateInfinite}\n            />\n          </label>\n        </form>\n      </>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemWidth: PropTypes.number,\n  step: PropTypes.number,\n  frameSize: PropTypes.number,\n  animationDuration: PropTypes.number,\n  infinite: PropTypes.bool,\n};\n\nCarousel.defaultProps = {\n  itemWidth: 130,\n  step: 3,\n  frameSize: 3,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={this.state.images}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}